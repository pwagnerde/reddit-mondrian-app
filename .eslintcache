[{"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\index.js":"1","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\rootStore.js":"2","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\App.js":"3","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\posts\\postsSlice.js":"4","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\users\\usersSlice.js":"5","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\api\\client.js":"6","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\api\\server.js":"7","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\components\\Navbar.js":"8","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\components\\PostsList.js":"9","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\components\\SinglePostPage.js":"10","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\components\\TimeAgo.js":"11","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\components\\PostAuthor.js":"12","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\components\\ReactionButtons.js":"13"},{"size":461,"mtime":1611703285763,"results":"14","hashOfConfig":"15"},{"size":247,"mtime":1611698771256,"results":"16","hashOfConfig":"15"},{"size":763,"mtime":1611700824830,"results":"17","hashOfConfig":"15"},{"size":2239,"mtime":1611698959351,"results":"18","hashOfConfig":"15"},{"size":742,"mtime":1611698994769,"results":"19","hashOfConfig":"15"},{"size":987,"mtime":1611698925359,"results":"20","hashOfConfig":"15"},{"size":5254,"mtime":1611698928068,"results":"21","hashOfConfig":"15"},{"size":372,"mtime":1611535966881,"results":"22","hashOfConfig":"15"},{"size":1783,"mtime":1611700998551,"results":"23","hashOfConfig":"15"},{"size":893,"mtime":1611700910420,"results":"24","hashOfConfig":"15"},{"size":396,"mtime":1611533728721,"results":"25","hashOfConfig":"15"},{"size":328,"mtime":1611701033729,"results":"26","hashOfConfig":"15"},{"size":781,"mtime":1611700962598,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ylchfp",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\index.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\rootStore.js",[],["57","58"],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\App.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\posts\\postsSlice.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\users\\usersSlice.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\api\\client.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\api\\server.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\components\\Navbar.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\components\\PostsList.js",["59"],"import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { PostAuthor } from './PostAuthor'\r\nimport { TimeAgo } from './TimeAgo'\r\nimport { ReactionButtons } from './ReactionButtons'\r\nimport {\r\n  selectAllPosts,\r\n  fetchPosts,\r\n  selectPostIds,\r\n  selectPostById,\r\n} from '../../stores/posts/postsSlice'\r\n\r\nlet PostExcerpt = ({ postId }) => {\r\n  const post = useSelector((state) => selectPostById(state, postId))\r\n\r\n  return (\r\n    <article className=\"post-excerpt\" key={post.id}>\r\n      <h3>{post.title}</h3>\r\n      <div>\r\n        <PostAuthor userId={post.user} />\r\n        <TimeAgo timestamp={post.date} />\r\n      </div>\r\n      <ReactionButtons post={post} />\r\n      <p className=\"post-content\">{post.content.substring(0, 100)}</p>\r\n      <Link to={`/posts/${post.id}`} className=\"button muted-button\">\r\n        View Post\r\n      </Link>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport const PostsList = () => {\r\n  const dispatch = useDispatch()\r\n  const orderedPostIds = useSelector(selectPostIds)\r\n\r\n  const postStatus = useSelector((state) => state.posts.status)\r\n  const error = useSelector((state) => state.posts.error)\r\n\r\n  useEffect(() => {\r\n    if (postStatus === 'idle') {\r\n      dispatch(fetchPosts())\r\n    }\r\n  }, [postStatus, dispatch])\r\n\r\n  let content\r\n\r\n  if (postStatus === 'loading') {\r\n    content = <div className=\"loader\">Loading...</div>\r\n  } else if (postStatus === 'succeeded') {\r\n    content = orderedPostIds.map((postId) => (\r\n      <PostExcerpt key={postId} postId={postId} />\r\n    ))\r\n  } else if (postStatus === 'error') {\r\n    content = <div>{error}</div>\r\n  }\r\n\r\n  return (\r\n    <section className=\"posts-list\">\r\n      <h2>Posts</h2>\r\n      {content}\r\n    </section>\r\n  )\r\n}\r\n","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\components\\SinglePostPage.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\components\\TimeAgo.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\components\\PostAuthor.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\components\\ReactionButtons.js",[],["60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":9,"column":3,"nodeType":"68","messageId":"69","endLine":9,"endColumn":17},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'selectAllPosts' is defined but never used.","Identifier","unusedVar",["72"],["73"],"no-global-assign","no-unsafe-negation"]