[{"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\index.js":"1","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\rootStore.js":"2","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\constants\\base.js":"3","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\posts\\redditSlice.js":"4","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\posts\\subRedditSlice.js":"5","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\api\\reddit.js":"6","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\App.js":"7","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\utils\\shortenNumber.js":"8","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\Footer\\Footer.js":"9","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\Header\\Header.js":"10","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\Home\\Home.js":"11","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\Teaser\\Teaser.js":"12","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\Navigation\\Navigation.js":"13"},{"size":370,"mtime":1612025090736,"results":"14","hashOfConfig":"15"},{"size":311,"mtime":1611874403568,"results":"16","hashOfConfig":"15"},{"size":492,"mtime":1612025409602,"results":"17","hashOfConfig":"15"},{"size":3565,"mtime":1611881698570,"results":"18","hashOfConfig":"15"},{"size":808,"mtime":1611876343348,"results":"19","hashOfConfig":"15"},{"size":708,"mtime":1611880865331,"results":"20","hashOfConfig":"15"},{"size":952,"mtime":1612022203897,"results":"21","hashOfConfig":"15"},{"size":533,"mtime":1612025340537,"results":"22","hashOfConfig":"15"},{"size":536,"mtime":1612025292056,"results":"23","hashOfConfig":"15"},{"size":1524,"mtime":1612037664728,"results":"24","hashOfConfig":"15"},{"size":1740,"mtime":1612037652083,"results":"25","hashOfConfig":"15"},{"size":749,"mtime":1612037642671,"results":"26","hashOfConfig":"15"},{"size":1122,"mtime":1612040111385,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ylchfp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\index.js",[],["57","58"],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\rootStore.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\constants\\base.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\posts\\redditSlice.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\posts\\subRedditSlice.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\stores\\api\\reddit.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\App.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\utils\\shortenNumber.js",[],["59","60"],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\Footer\\Footer.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\Header\\Header.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\Home\\Home.js",["61"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Teaser from '../Teaser/Teaser'\nimport {\n  fetchPosts,\n  selectFilteredPosts,\n  setSearchTerm,\n  fetchComments,\n} from '../../stores/posts/redditSlice';\nimport './Home.css';\n\nconst Home = () => {\n  const reddit = useSelector((state) => state.reddit);\n  const { isLoading, error, searchTerm, selectedSubreddit } = reddit;\n  const posts = useSelector(selectFilteredPosts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPosts(selectedSubreddit));\n  }, [selectedSubreddit]);\n\n  const onToggleComments = (index) => {\n    const getComments = (permalink) => {\n      dispatch(fetchComments(index, permalink));\n    };\n\n    return getComments;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"loader\">Loading...</div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error\">\n        <h2>Failed to load posts.</h2>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(fetchPosts(selectedSubreddit))}\n        >\n          Try again\n        </button>\n      </div>\n    );\n  }\n\n  if (posts.length === 0) {\n    return (\n      <div className=\"error\">\n        <h2>No posts matching \"{searchTerm}\"</h2>\n        <button type=\"button\" onClick={() => dispatch(setSearchTerm(''))}>\n          Go home\n        </button>\n      </div>\n    );\n  }\n\n    return (\n      <>\n        <div className=\"mondrianFlex\">\n          {posts.map((post, index) => (\n            <Teaser\n              key={post.id}\n              post={post}\n              index={index}\n              onToggleComments={onToggleComments(index)}\n            />\n          ))}\n        </div>\n      </>\n    )\n};\n\nexport default Home;\n","D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\Teaser\\Teaser.js",[],"D:\\OneDrive\\09 Zorin\\portfolio-projects\\reddit-mondrian-app\\src\\views\\Navigation\\Navigation.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":20,"column":6,"nodeType":"70","endLine":20,"endColumn":25,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [dispatch, selectedSubreddit]",{"range":"77","text":"78"},[580,599],"[dispatch, selectedSubreddit]"]